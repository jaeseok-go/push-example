version: '3.9'
services:

  redis:
    container_name: redis
    image: 'redis:7.2.1-alpine'
    ports:
      - '127.0.0.1:6379:6379/tcp'
    healthcheck:
      test: redis-cli ping
      interval: 3s
      timeout: 5s
      retries: 5
    networks:
      - push-net

  zookeeper:
    container_name: zookeeper
    image: confluentinc/cp-zookeeper
    environment:
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_INIT_LIMIT: 5
      ZOOKEEPER_SYNC_LIMIT: 2
    ports:
      - '2181:2181'
    networks:
      - push-net

  kafka:
    container_name: kafka
    image: confluentinc/cp-kafka
    depends_on:
      - zookeeper
    ports:
      - '9092:9092'
    healthcheck:
      test: [ "CMD-SHELL", "nc -z localhost 9092" ]
      interval: 30s
      timeout: 5s
      retries: 3
    environment:
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    networks:
      - push-net

  push-client:
    container_name: push-client
    build:
      context: ./client
      dockerfile: Dockerfile
    ports:
      - '8081:8080'
    networks:
      - push-net
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

  push-server:
    container_name: push-server
    build:
      context: ./server
      dockerfile: Dockerfile
    ports:
      - '8080:8080'
    networks:
      - push-net
    depends_on:
      kafka:
        condition: service_healthy
      redis:
        condition: service_healthy
    restart: unless-stopped

networks:
  push-net:
